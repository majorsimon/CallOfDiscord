version: '3.1'
services: 
  mongodb:
    image: mongo
    restart: on-failure
    volumes: 
      - ./mongo/init:/docker-entrypoint-initdb.d
    #   - ./mongo/data:/data/db:Z
    ports:
      - 27017:27017
    environment: 
      MONGO_INITDB_ROOT_USERNAME: "${MONGO_ROOT_USER}"
      MONGO_INITDB_ROOT_PASSWORD: "${MONGO_ROOT_PASS}"
      MONGO_INITDB_DATABASE: "${MONGO_DB_NAME}"
      MONGO_READONLY_USER: "${MONGO_READONLY_USER}"
      MONGO_READONLY_PASS: "${MONGO_READONLY_PASS}"
      MONGO_READWRITE_USER: "${MONGO_READWRITE_USER}"
      MONGO_READWRITE_PASS: "${MONGO_READWRITE_PASS}"
      MONGO_DB_NAME: "${MONGO_DB_NAME}"

  mongo-express:
    image: mongo-express
    restart: on-failure
    depends_on: 
      - mongodb
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: "${MONGO_ROOT_USER}"
      ME_CONFIG_MONGODB_ADMINPASSWORD: "${MONGO_ROOT_PASS}"
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_SITE_BASEURL: /mongo/

  # discordbot:
  #   build: ./discordbot/
  #   restart: on-failure
  #   depends_on: 
  #     - mongodb
  #   environment:
  #     MONGODB_ROOT_USER: "${MONGO_ROOT_USER}"
  #     MONGODB_ROOT_PASS: "${MONGO_ROOT_PASS}"
  #     DISCORD_API_KEY: "${DISCORD_API_KEY}"

  cod-api-fetch:
    build: ./cod-api-fetch/
    restart: on-failure
    depends_on: 
      - mongodb
    environment:
      MONGO_READWRITE_USER: "${MONGO_READWRITE_USER}"
      MONGO_READWRITE_PASS: "${MONGO_READWRITE_PASS}"
      MONGO_DB_NAME: "${MONGO_DB_NAME}"

  nginx:
    image: nginx
    restart: on-failure
    depends_on: 
      - mongo-express
    volumes: 
      - ./nginx/config/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/config/include.d:/etc/nginx/include.d
      - ./nginx/config/ssl.d:/etc/nginx/ssl.d
      - ./logs/nginx:/var/log/nginx
    ports:
      - "80:80"
      - "443:443"
  
volumes:
  mongodb:


